jsonpContent({"content": "PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPjxodG1sIGxhbmc9ImVuIj48aGVhZD4gPG1ldGEgY29udGVudD0iMjAxNS0xMi0xMVQxNjo1Njo0NyIgaHR0cC1lcXVpdj0ibGFzdC1tb2RpZmllZCIgLz4gPG1ldGEgY29udGVudD0iMTA3NiIgbmFtZT0iTlRJUmVsYXRpdmVTY3JvbGxIZWlnaHQiIC8+IDxtZXRhIGNvbnRlbnQ9InRhZzpuZXh0dGhvdWdodC5jb20sMjAxMS0xMDpPVS1IVE1MLUNTMTMyM19GXzIwMTVfSW50cm9fdG9fQ29tcHV0ZXJfUHJvZ3JhbW1pbmcuY29uc3RydWN0b3JfZGVmaW5pdGlvbl9zeW50YXgiIG5hbWU9Ik5USUlEIiAvPiA8bWV0YSBjb250ZW50PSJOZXh0VGhvdWdodCIgbmFtZT0iZ2VuZXJhdG9yIiAvPiA8bWV0YSBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9YXNjaWkiIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgLz4gPHRpdGxlPkNvbnN0cnVjdG9yIERlZmluaXRpb24gU3ludGF4PC90aXRsZT4gPGxpbmsgaHJlZj0idGFnOm5leHR0aG91Z2h0LmNvbSwyMDExLTEwOk9VLUhUTUwtQ1MxMzIzX0ZfMjAxNV9JbnRyb190b19Db21wdXRlcl9Qcm9ncmFtbWluZy5jb2RpbmdfYV9jb25zdHJ1Y3RvciIgcmVsPSJuZXh0IiB0aXRsZT0iQ29kaW5nIGEgQ29uc3RydWN0b3IiIC8+IDxsaW5rIGhyZWY9InRhZzpuZXh0dGhvdWdodC5jb20sMjAxMS0xMDpPVS1IVE1MLUNTMTMyM19GXzIwMTVfSW50cm9fdG9fQ29tcHV0ZXJfUHJvZ3JhbW1pbmcudXNpbmdfYV9jb25zdHJ1Y3RvciIgcmVsPSJwcmV2IiB0aXRsZT0iVXNpbmcgYSBDb25zdHJ1Y3RvciIgLz4gPGxpbmsgaHJlZj0idGFnOm5leHR0aG91Z2h0LmNvbSwyMDExLTEwOk9VLUhUTUwtQ1MxMzIzX0ZfMjAxNV9JbnRyb190b19Db21wdXRlcl9Qcm9ncmFtbWluZy5yZWFkaW5nOkNob3J0bGVfQ0gzMF8yIiByZWw9InVwIiB0aXRsZT0iRGVmaW5pbmcgWW91ciBPd24gQ2xhc3NlcyIgLz4gPGxpbmsgaHJlZj0ic3R5bGVzL3N0eWxlcy5jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4gPGxpbmsgaHJlZj0ic3R5bGVzL2NvbnRlbnQuY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+IDwvaGVhZD4gPGJvZHkgaWQ9Ik5USUNvbnRlbnQiPiA8ZGl2IGNsYXNzPSJwYWdlLWNvbnRlbnRzIj48ZGl2IGRhdGEtbnRpaWQ9InRhZzpuZXh0dGhvdWdodC5jb20sMjAxMS0xMDpPVS1IVE1MLUNTMTMyM19GXzIwMTVfSW50cm9fdG9fQ29tcHV0ZXJfUHJvZ3JhbW1pbmcuY29uc3RydWN0b3JfZGVmaW5pdGlvbl9zeW50YXgiIGlkPSJhMDAwMDAwMDQ5OCIgbnRpaWQ9InRhZzpuZXh0dGhvdWdodC5jb20sMjAxMS0xMDpPVS1IVE1MLUNTMTMyM19GXzIwMTVfSW50cm9fdG9fQ29tcHV0ZXJfUHJvZ3JhbW1pbmcuY29uc3RydWN0b3JfZGVmaW5pdGlvbl9zeW50YXgiPiA8ZGl2IGNsYXNzPSJjaGFwdGVyIHRpdGxlIj5Db25zdHJ1Y3RvciBEZWZpbml0aW9uIFN5bnRheDwvZGl2PiA8cCBjbGFzcz0icGxhY2Vob2xkZXIiPjwvcD4gPGEgbmFtZT0iMWViNTQ5MjY4MDMyOTI5YjJhYjRiMjc2ODViNDcxNDgiPjwvYT4gPGRpdiBjbGFzcz0ic2lkZWJhciIgZGF0YS1udGlpZD0idGFnOm5leHR0aG91Z2h0LmNvbSwyMDExLTEwOk9VLUhUTUw6TlRJU2lkZWJhci1DUzEzMjNfRl8yMDE1X0ludHJvX3RvX0NvbXB1dGVyX1Byb2dyYW1taW5nLnNpZGViYXIuYW5zd2VyLjE3MyIgbnRpaWQ9InRhZzpuZXh0dGhvdWdodC5jb20sMjAxMS0xMDpPVS1IVE1MOk5USVNpZGViYXItQ1MxMzIzX0ZfMjAxNV9JbnRyb190b19Db21wdXRlcl9Qcm9ncmFtbWluZy5zaWRlYmFyLmFuc3dlci4xNzMiPiA8ZGl2IGNsYXNzPSJzaWRlYmFyLXRpdGxlIj5BbnN3ZXI8L2Rpdj4gV2hlcmUgaW4gdGhlIGFib3ZlIGNvZGUgaXMgYSBjb25zdHJ1Y3RvciBiZWluZyB1c2VkPyA8cHJlPkhlbGxvT2JqZWN0IGFuT2JqZWN0ID0gbmV3IEhlbGxvT2JqZWN0KCJBIEdyZWV0aW5nISIpOyAKICAgICAgICAgICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KPC9wcmU+IFdoYXQgaXMgaXRzIHBhcmFtZXRlcj8gQSByZWZlcmVuY2UgdG8gdGhlIHN0cmluZywgIkEgR3JlZXRpbmchIiA8L2Rpdj48YSBuYW1lPSIxNDg4OTBhMmIzZjM5MzlmOTdhOGZkYmQzZjZkMzNhOSI+PC9hPiA8cCBjbGFzcz0icGFyIiBpZD0iMTQ4ODkwYTJiM2YzOTM5Zjk3YThmZGJkM2Y2ZDMzYTkiPlRoZSBjbGFzcyBuZWVkcyBhIDxpIGNsYXNzPSJpdHNoYXBlIj5jb25zdHJ1Y3RvcjwvaT4uIENvbnN0cnVjdG9yIGRlZmluaXRpb25zIGxvb2sgbGlrZSB0aGlzOiA8L3A+IDxhIG5hbWU9IjQwYmMxMDY5ZWMxODRjNjRhYzgyMTlhNTU1NzIxNWU0Ij48L2E+IDxwcmU+Y2xhc3NOYW1lKCBwYXJhbWV0ZXJMaXN0ICkKewogIFN0YXRlbWVudHMgaW52b2x2aW5nIHRoZSB2YXJpYWJsZXMgb2YgdGhlIAogIGNsYXNzIGFuZCB0aGUgcGFyYW1ldGVycyBpbiB0aGUgcGFyYW1ldGVyTGlzdC4KfQo8L3ByZT48YSBuYW1lPSJiZTgwNTI3OWI1OGFhOGFlMmZjYWY2Y2NmNWE3YmJmMyI+PC9hPiA8cCBjbGFzcz0icGFyIiBpZD0iYmU4MDUyNzliNThhYThhZTJmY2FmNmNjZjVhN2JiZjMiPk5vIHJldHVybiB0eXBlIGlzIGxpc3RlZCBpbiBmcm9udCBvZiA8aSBjbGFzcz0iaXRzaGFwZSI+Y2xhc3NOYW1lPC9pPi4gVGhlIDxiIGNsYXNzPSJiZnNlcmllcyI+PHR0IGNsYXNzPSJ0dGZhbWlseSI+cmV0dXJuPC90dD48L2I+IHR5cGUgaXMgYXV0b21hdGljYWxseSBhIHJlZmVyZW5jZSB0byBhbiBvYmplY3Qgb2YgdGhlIGNsYXNzLiBUaGVyZSBpcyBubyByZXR1cm4gc3RhdGVtZW50IGluIHRoZSBib2R5IG9mIHRoZSBjb25zdHJ1Y3Rvci4gQSByZWZlcmVuY2UgaXMgcmV0dXJuZWQgYXV0b21hdGljYWxseS4gKFRoZXJlIHdvdWxkIGJlIG5vIHJlYXNvbiB0byBoYXZlIGEgY29uc3RydWN0b3IsIG90aGVyd2lzZS4pIFRoZSBjb25zdHJ1Y3RvciBoYXMgdGhlIHNhbWUgbmFtZSBhcyB0aGUgY2xhc3MuIFRoZSBwYXJhbWV0ZXJMaXN0IGlzIGEgbGlzdCBvZiB2YWx1ZXMgYW5kIHRoZWlyIHR5cGVzOiA8L3A+IDxhIG5hbWU9ImU3MjNlYjk1NDk4NzhjN2JiYWEzYzhkMTAwMjMwYzBlIj48L2E+IDxibG9ja3F1b3RlIGNsYXNzPSJxdW90ZSI+IDx0dCBjbGFzcz0idHRmYW1pbHkiPlR5cGVOYW1lMSBwYXJhbWV0ZXJOYW1lMSwgVHlwZU5hbWUyIHBhcmFtZXRlck5hbWUyLCAmIzgyMzA7PC90dD4gYXMgbWFueSBhcyB5b3UgbmVlZCA8L2Jsb2NrcXVvdGU+PGEgbmFtZT0iOGM4MDdhNTgzYzU3Nzk4NTA3ZmVlNDIyM2QwYjIzMDMiPjwvYT4gPHAgY2xhc3M9InBhciIgaWQ9IjhjODA3YTU4M2M1Nzc5ODUwN2ZlZTQyMjNkMGIyMzAzIj5JdCBpcyBPSyB0byBoYXZlIGFuIGVtcHR5IHBhcmFtZXRlciBsaXN0LiBBIGNsYXNzIG9mdGVuIGhhcyBzZXZlcmFsIGNvbnN0cnVjdG9ycyB3aXRoIGRpZmZlcmVudCBwYXJhbWV0ZXJzLiBFYWNoIG9uZSBidWlsZHMgdGhlIHNhbWUgY2xhc3Mgb2Ygb2JqZWN0LCBidXQgdGhlIGRpZmZlcmVudCBjb25zdHJ1Y3RvcnMgdXNlIGRpZmZlcmVudCBzb3VyY2VzIG9mIGRhdGEgZm9yIG9iamVjdCBpbml0aWFsaXphdGlvbi4gPC9wPiA8YSBuYW1lPSJjMjZhMWU5NzZiNjczZmQzYzIyZWRmNDAwOTE1ZTJlYiI+PC9hPiA8cCBjbGFzcz0icGFyIiBpZD0iYzI2YTFlOTc2YjY3M2ZkM2MyMmVkZjQwMDkxNWUyZWIiPlVzdWFsbHkgdGhlIG1ldGhvZCB0aGF0IGludm9rZXMgYSBjb25zdHJ1Y3RvciBzYXZlcyB0aGUgcmV0dXJuZWQgcmVmZXJlbmNlIGluIGEgdmFyaWFibGUuIEJ1dCBzb21ldGltZXMgYW4gb2JqZWN0IGlzIGNvbnN0cnVjdGVkIGZvciB0ZW1wb3JhcnkgdXNlIGFuZCBpdHMgcmVmZXJlbmNlIGlzIG5vdCBzYXZlZC4gVGhlIG9iamVjdCBpcyB1c2VkIG9uY2UgZm9yIHNvbWUgYnJpZWYgcHVycG9zZSBhbmQgdGhlbiBiZWNvbWVzIGdhcmJhZ2UuIDwvcD4gPGEgbmFtZT0iYzYzYWI1YWQyNzM2YWU0NmQ4YjQxYzA3ZjZhMzJjZjciPjwvYT4gPGRpdiBjbGFzcz0ic2lkZWJhciIgZGF0YS1udGlpZD0idGFnOm5leHR0aG91Z2h0LmNvbSwyMDExLTEwOk9VLUhUTUw6TlRJU2lkZWJhci1DUzEzMjNfRl8yMDE1X0ludHJvX3RvX0NvbXB1dGVyX1Byb2dyYW1taW5nLnNpZGViYXIucXVlc3Rpb24uMTgyIiBudGlpZD0idGFnOm5leHR0aG91Z2h0LmNvbSwyMDExLTEwOk9VLUhUTUw6TlRJU2lkZWJhci1DUzEzMjNfRl8yMDE1X0ludHJvX3RvX0NvbXB1dGVyX1Byb2dyYW1taW5nLnNpZGViYXIucXVlc3Rpb24uMTgyIj4gPGRpdiBjbGFzcz0ic2lkZWJhci10aXRsZSI+UXVlc3Rpb248L2Rpdj4gPGEgbmFtZT0iMGQzMzQzMjAxMGQwNWJmNmMxOWIxMjYwZmEyOTExZGQiPjwvYT4gPHAgY2xhc3M9InBhciIgaWQ9IjBkMzM0MzIwMTBkMDViZjZjMTliMTI2MGZhMjkxMWRkIj4gQ2FuIGEgcGFyYW1ldGVyIGJlIGFuIG9iamVjdCByZWZlcmVuY2U/IDwvcD4gPGEgbmFtZT0iYmZjOGQwYTFlNjIxNjcxYzdlOTQ4YWQzYzA2ZGUzNjMiPjwvYT4gPHAgY2xhc3M9InBhciIgaWQ9ImJmYzhkMGExZTYyMTY3MWM3ZTk0OGFkM2MwNmRlMzYzIj5DYW4gYSBwYXJhbWV0ZXIgYmUgYSBwcmltaXRpdmUgZGF0YSB0eXBlPyA8L3A+IDwvZGl2PiA8L2Rpdj48L2Rpdj4gPC9ib2R5PjwvaHRtbD4=", "ntiid": "tag:nextthought.com,2011-10:OU-HTML-CS1323_F_2015_Intro_to_Computer_Programming.constructor_definition_syntax", "version": "1", "Content-Type": "text/html", "Content-Encoding": "base64"});